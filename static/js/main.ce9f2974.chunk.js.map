{"version":3,"sources":["CartSummary.js","Nav.js","Category.js","Productlist.js","Error.js","CartList.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["CartList","props","empty_cart","inNavbar","nav","cart_review","caret","carts","length","map","item","index","color","onClick","remove","product","productName","quantity","divider","to","state","this","Component","Navi","changestate","setState","brand","isOpen","toggle","bind","className","expand","fixed","light","href","navbar","isActive","strict","cart","removeCart","Category","get_categories","path","fetch","then","response","json","data","itemcategory","onmouseover","prevState","id","categoryName","seoUrl","class","active","currentcat","info","category","click","pill","baseUrl","current","Product","itemproducts","hover","responsive","products","scope","categoryId","quantityPerUnit","unitPrice","unitsInStock","outline","addchart","Error","Formuser","username","email","password","onchange","event","target","name","value","onSubmithandler","preventDefault","alert","onSubmit","for","onChange","type","placeholder","multiple","tag","check","disabled","App","currentcategory","remove_cart","pro","newcart","filter","cartitem","alertfy","error","add_chart","ncarts","is_order","find","card","console","log","push","forEach","c","success","get_products","url","onclic","xs","element","span","offset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9f2974.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Badge,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nexport default class CartList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  empty_cart = () => {\r\n    return (\r\n      <UncontrolledDropdown inNavbar nav>\r\n        <DropdownToggle nav>Empity</DropdownToggle>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  cart_review = () => {\r\n    return (\r\n      <UncontrolledDropdown inNavbar nav>\r\n        <DropdownToggle caret nav>\r\n          Your Carts ({this.props.carts.length})\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {this.props.carts.map((item, index) => (\r\n            <DropdownItem key={index}>\r\n              <Badge\r\n                color=\"danger\"\r\n                onClick={() => this.props.remove(item.product)}\r\n              >\r\n                {\" X \"}\r\n              </Badge>\r\n              {item.product.productName}\r\n              {\"    \"}\r\n              <Badge color=\"success\"> {item.quantity} </Badge>\r\n            </DropdownItem>\r\n          ))}\r\n\r\n          <DropdownItem divider />\r\n          <DropdownItem>\r\n            <Link to=\"carts\"> GoTo Cart list</Link>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n  render() {\r\n    return this.props.carts.length !== 0\r\n      ? this.cart_review()\r\n      : this.empty_cart();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavbarToggler,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n  Dropdown,\r\n} from \"reactstrap\";\r\n\r\nimport Cartsummary from \"./CartSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Navi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      brand: this.props.brand,\r\n      isOpen: false,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  }\r\n  changestate = () => {\r\n    this.setState({ brand: \"E-TRADİNG APP\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Navbar color=\"warning\" expand=\"md\" fixed=\"True\" light>\r\n          <NavbarBrand href=\"/\">E -Trading App</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse\r\n            className=\" justify-content-end\"\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n          >\r\n            <Nav className=\"ml-auto \" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to=\"formuser\">Log in</Link>\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink to=\"/about\">About</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  to=\"/faq\"\r\n                  className={(isActive) =>\r\n                    \"nav-link\" + (!isActive ? \" unselected\" : \"\")\r\n                  }\r\n                >\r\n                  FAQs\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink strict to=\"/events/\">\r\n                  Events\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">\r\n                  GitHub\r\n                </NavLink>\r\n              </NavItem>\r\n              <Cartsummary\r\n                carts={this.props.cart}\r\n                remove={this.props.removeCart}\r\n              />\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge,\r\n  Row,\r\n  CardHeader,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      itemcategory: [],\r\n    };\r\n  }\r\n\r\n  get_categories = (path) => {\r\n    fetch(path)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ itemcategory: data }));\r\n  };\r\n  onmouseover = () => {\r\n    //alert(\"onmouseover events running\");\r\n    this.setState((prevState) => ({\r\n      // eslint-disable-next-line no-sparse-arrays\r\n      itemcategory: [\r\n        ...prevState.itemcategory,\r\n        {\r\n          id: 9,\r\n          categoryName: \"Home & Garden\",\r\n          seoUrl: \"HomeGarden\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { current: props.info };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //#region\r\n      <div class=\"container\">\r\n        <Row>\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <a href=\"/\">Home</a>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>\r\n              {this.props.currentcat.categoryName}\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </Row>\r\n        <Row>\r\n          <CardHeader>{this.props.info}</CardHeader>\r\n        </Row>\r\n        <ListGroup>\r\n          {this.state.itemcategory.map((category, index) => (\r\n            <ListGroupItem\r\n              active={this.props.currentcat.id === category.id ? true : false}\r\n              onClick={() => this.props.click(category)}\r\n              // onMouseOver={this.onmouseover}\r\n              className=\"justify-content-start\"\r\n              key={index}\r\n            >\r\n              {category.categoryName} <Badge pill>{}</Badge>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.get_categories(this.props.baseUrl + \"/categories\");\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React, { Component } from \"react\";\r\nimport { CardHeader, Row, Table, Button } from \"reactstrap\";\r\nexport default class Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemproducts: [],\r\n      carts: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Row>\r\n          <CardHeader>\r\n            {this.props.currentcat.id\r\n              ? this.props.info + \" / \" + this.props.currentcat.categoryName\r\n              : this.props.info}\r\n          </CardHeader>\r\n        </Row>\r\n        <Table hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>categoryId</th>\r\n              <th>productName</th>\r\n              <th>quantityPerUnit</th>\r\n              <th>unitPrice($)</th>\r\n              <th>unitsInStock</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.products.map((product, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{product.id}</th>\r\n                <td>{product.categoryId}</td>\r\n                <td>{product.productName}</td>\r\n                <td>{product.quantityPerUnit}</td>\r\n                <td>{product.unitPrice}</td>\r\n                <td>{product.unitsInStock}</td>\r\n                <td>\r\n                  <Button\r\n                    outline\r\n                    color=\"info\"\r\n                    onClick={() => this.props.addchart(product)}\r\n                  >\r\n                    ADD\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Error Page\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nclass CartList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render_cart() {\r\n    return (\r\n      <div className=\"container-md\">\r\n        <Table hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>categoryId</th>\r\n              <th>productName</th>\r\n              <th>quantityPerUnit</th>\r\n              <th>unitPrice($)</th>\r\n              <th>unitsInStock</th>\r\n              <th>Quantity</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.carts.map((item, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{item.product.categoryId}</th>\r\n                <td>{item.product.productName}</td>\r\n                <td>{item.product.quantityPerUnit}</td>\r\n                <td>{item.product.unitPrice}</td>\r\n                <td>{item.product.unitsInStock}</td>\r\n                <td>\r\n                  <Button\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => this.props.remove(item.product)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-md\">\r\n        <Table hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>categoryId</th>\r\n              <th>productName</th>\r\n              <th>quantityPerUnit</th>\r\n              <th>unitPrice($)</th>\r\n              <th>unitsInStock</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.carts.map((item, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{index}</th>\r\n                <th>{item.product.categoryId}</th>\r\n                <td>{item.product.productName}</td>\r\n                <td>{item.product.quantityPerUnit}</td>\r\n                <td>{item.product.unitPrice}</td>\r\n                <td>{item.product.unitsInStock}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>\r\n                  <Button\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => this.props.remove(item.product)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartList;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\n\r\nexport default class Formuser extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onchange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmithandler = (event) => {\r\n    event.preventDefault();\r\n    alert(this.state.username);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Form onSubmit={this.onSubmithandler}>\r\n          <FormGroup>\r\n            <Label for=\"exampleUsername\">Username--{this.state.username}</Label>\r\n            <Input\r\n              onChange={this.onchange}\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"exampleUsername\"\r\n              placeholder=\"with a placeholder\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email--{this.state.email}</Label>\r\n            <Input\r\n              onChange={this.onchange}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"with a placeholder\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">\r\n              Password --{this.state.password}\r\n            </Label>\r\n            <Input\r\n              onChange={this.onchange}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              placeholder=\"password placeholder\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleSelect\">Select</Label>\r\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleSelectMulti\">Select Multiple</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"selectMulti\"\r\n              id=\"exampleSelectMulti\"\r\n              multiple\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleText\">Text Area</Label>\r\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleFile\">File</Label>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above\r\n              input. It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </FormGroup>\r\n          <FormGroup tag=\"fieldset\">\r\n            <legend>Radio Buttons</legend>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Option one is this and\r\n                that—be sure to include why it's great\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Option two can be something\r\n                else and selecting it will deselect option one\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check disabled>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" disabled /> Option three is\r\n                disabled\r\n              </Label>\r\n            </FormGroup>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"checkbox\" /> Check me out\r\n            </Label>\r\n          </FormGroup>\r\n          <Button>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//import logo from './logo.svg';\r\n//import './App.css';\r\n\r\nimport Nav from \"./Nav\";\r\nimport Cat from \"./Category\";\r\nimport Pro from \"./Productlist\";\r\nimport Error from \"./Error\";\r\nimport CartList from \"./CartList\";\r\nimport CartSummary from \"./CartSummary\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Formuser from \"./Form\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport alertfy from \"alertifyjs\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n  baseUrl = \"https://server-backend-api.herokuapp.com\";\r\n  state = {\r\n    currentcategory: \"\",\r\n    products: [],\r\n    carts: [],\r\n  };\r\n  remove_cart = (pro) => {\r\n    let newcart = this.state.carts.filter(\r\n      (cartitem, index) => cartitem.product.id !== pro.id\r\n    );\r\n    this.setState({ carts: newcart });\r\n    alertfy.error(pro.productName + \" removed from chart..\", 2);\r\n  };\r\n  add_chart = (pro) => {\r\n    let ncarts = this.state.carts;\r\n    var is_order = ncarts.find((card) => card.product.id === pro.id);\r\n\r\n    if (is_order) {\r\n      is_order.quantity += 1;\r\n\r\n      console.log(is_order);\r\n    } else {\r\n      ncarts.push({ product: pro, quantity: 1 });\r\n    }\r\n\r\n    this.setState({ carts: ncarts });\r\n    console.log(\"carts_state ::\");\r\n    ncarts.forEach((c) => console.log(c));\r\n\r\n    alertfy.success(pro.productName + \" add to chart..\", 2);\r\n    // alertfy.alert(\"ADD\", \"Alert Message!\", function () {\r\n    //   alertfy.success(pro.productName + \" add to chart..\", 2);\r\n    // });\r\n  };\r\n  get_products = (category) => {\r\n    var url = this.baseUrl + \"/products\";\r\n    if (category.seoUrl) {\r\n      url = url + \"?categoryId=\" + category.id;\r\n    }\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ products: data }));\r\n  };\r\n  onclic = (category) => {\r\n    //alert(\"you clicked \" + category.items);\r\n    this.setState({\r\n      currentcategory: category,\r\n    });\r\n    //alert(category.categoryName);\r\n    this.get_products(category);\r\n  };\r\n\r\n  render() {\r\n    const brand = \"First React Apps\";\r\n    let CategoryHead = \"Categories\";\r\n    let ProductHead = \"Products\";\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Nav\r\n            brand={brand}\r\n            cart={this.state.carts}\r\n            removeCart={this.remove_cart}\r\n          />\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs=\"4\">\r\n            <Cat\r\n              baseUrl={this.baseUrl}\r\n              click={this.onclic}\r\n              info={CategoryHead}\r\n              currentcat={this.state.currentcategory}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs=\"8\">\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                element={\r\n                  <Pro\r\n                    info={ProductHead}\r\n                    products={this.state.products}\r\n                    currentcat={this.state.currentcategory}\r\n                    addchart={this.add_chart}\r\n                  />\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/carts\"\r\n                element={\r\n                  <CartList\r\n                    carts={this.state.carts}\r\n                    remove={this.remove_cart}\r\n                  />\r\n                }\r\n              />\r\n\r\n              <Route path=\"*\" element={<Error />} />\r\n              <Route path=\"/formuser\" element={<Formuser />} />\r\n            </Routes>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={{ span: 4, offset: 3 }}></Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.get_products(this.baseUrl + \"/products\");\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"alertifyjs/build/css/alertify.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter as Hrouter,\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Hrouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Hrouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}